HTTP协议，ajax

application/x-www-form-urlencoded

--------------------------------------------------------------------------------

jsonp：越用越少
跨域

安全性问题——过于开放

--------------------------------------------------------------------------------

ajax cors跨域
WebSocket
formData

--------------------------------------------------------------------------------

后台-nodejs：
1.原生
2.框架、库

--------------------------------------------------------------------------------

原生nodeJS：

NodeJS和其他后台语言不同：
优点：
1.nodejs的对象、语法跟JavaScript一模一样；利于前端人员用
2.性能还可以     PHP
  80多倍
3.前后台配合方便

缺点：
1.Java极其丰富库支持

NodeJS用处：
1.服务器——小型后台系统、中间层
2.工具
  测试、构建(grunt、gulp、WebPack...)、抓取

--------------------------------------------------------------------------------

Nodejs搭建，Web服务器：
http

--------------------------------------------------------------------------------

运行NodeJS程序：
1.盘符        d:
2.进入目录    cd 目录
3.运行        node xxx.js

<tab>

--------------------------------------------------------------------------------

http:80
ftp:21
mysql:3306

--------------------------------------------------------------------------------

1.nodejs和JavaScript差不多
2.模块
3.http模块
  let server=http.createServer(()=>{
    //有浏览器请求时执行的回调函数
  });
  server.listen(666);

--------------------------------------------------------------------------------

/favicon.ico

--------------------------------------------------------------------------------

1.系统模块
2.服务器完成——http、fs、流操作
3.WebSocket——socket.io
4.formData——ajax2.0、文件上传、进度
5.cors跨域

--------------------------------------------------------------------------------
