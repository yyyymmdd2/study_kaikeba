Web服务器：
1.返回文件                √
2.数据交互(GET、POST)
3.数据库

--------------------------------------------------------------------------------

get数据：
url里面
小-32K

post数据：
作为body
大-1G

--------------------------------------------------------------------------------

setHeader()
writeHeader()
write()

--------------------------------------------------------------------------------

一个大数据包为啥切成一堆小包
1.方便所有人
2.容错强得多

--------------------------------------------------------------------------------

//整个url
url.parse("/aaa/bbb?a=12&b=5")

//数据
querystring.parse("a=12&b=5")

--------------------------------------------------------------------------------

GET数据：
在"req.url"里面
  let {pathname, query}=url.parse(req.url, true);

POST数据：
在body里面、比较大
  let str='';   //?
  req.on('data', data=>{
    str+=data;
  });
  req.on('end', ()=>{
    let post=querystring.parse(str);
  });

--------------------------------------------------------------------------------

接口：
1.定下来——接口文档
2.写出来

--------------------------------------------------------------------------------

用户注册：
/reg?user=xxx&pass=xxx
=>{err: 0, msg: '说明'}

用户登陆：
/login?user=xxx&pass=xxx
=>{err: 0, msg: '说明'}

--------------------------------------------------------------------------------

安全性：99.9%的漏洞都是懒
1.一切来自前台的数据都不可信
2.前后台都得进行数据校验
  前台校验：用户体验
  后台校验：安全性

--------------------------------------------------------------------------------

http://localhost:8080/1.html      =>    /1.html
`www/1.html`

http://localhost:8080/www/1.html  =>    /www/1.html
`www/www/1.html`

--------------------------------------------------------------------------------

数据库：
1.关系型数据库——MySQL、Oracle    最常见、最常用
  数据之间是有关系的
2.文件型数据库——sqlite
  简单、小
3.文档型数据库——MongoDB
  直接存储异构数据——方便

MySQL     80%         免费    绝大多数普通应用
  性能很高、安全性很高
  容灾略差

Oracle                要钱    金融、医疗
  容灾特别强

--------------------------------------------------------------------------------

NoSQL   没有复杂的关系、对性能有极高的要求
redis、memcached、hypertable、bigtable

--------------------------------------------------------------------------------

数据库
数据库+接口+前台
ajax
formData
WebSocket

--------------------------------------------------------------------------------
